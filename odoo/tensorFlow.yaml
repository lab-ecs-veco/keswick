apiVersion: vmoperator.vmware.com/v1alpha1
kind: VirtualMachineClass
metadata:
  name: my-vm-class
spec:
  hardware:
    cpus: 4
    memory: 8Gi

---
apiVersion: vmoperator.vmware.com/v1alpha1
kind: VirtualMachine
metadata:
  name: tensorFlow
  namespace: default
  annotations:
    vmoperator.vmware.com/image-supported-check: disable
spec:
  className: my-vm-class
  imageName: cloud-images.ubuntu.com/bionic/current/bionic-server-cloudimg-amd64.ova
  powerState: poweredOn
  networkInterfaces:
    - networkName: "VM Network"
      ethernetCardType: "vmxnet3"
  vmMetadata:
    configMapName: user-data-ubuntu
    transport: CloudInit

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: user-data-ubuntu
  namespace: default
data:
  user-data: |
    #cloud-config
    ssh_pwauth: true
    users:
      - name: ubuntu
        sudo: ALL=(ALL) NOPASSWD:ALL
        lock_passwd: false
        passwd: '$6$kMPWCZg5vVJFcGom$z7W95e6uzdG7LLjRaEcox0jH69muJvMdbuz5gQnSI1RvOmvZTUVUu/4w1prxiVlTxDME.zVmbFGiZq8wmiA0Z0'
        shell: /bin/bash
    runcmd:
      - sudo rm -f /etc/netplan/*.yaml
      - |
        cat <<EOF > /etc/netplan/50-cloud-init.yaml
        network:
            ethernets:
                eth0:
                    dhcp4: true
            version: 2
        EOF
      - sudo netplan apply
      - |    
        cat <<EOF > /home/ubuntu/install-script.sh
        sudo sleep 60
        sudo apt-get update 
        sudo apt install -y make cmake apache2 pip
        sudo apt-get install -y python3-opencv openalpr g++ cmake libtesseract-dev libleptonica-dev libopencv-dev libcurl4-openssl-dev liblog4cplus-dev
        pip install tensorflow
	pip install matplotlib
        EOF
      - |    
        cat <<EOF > /home/ubuntu/tensor.py
        import tensorflow as tf
	print(tf.__version__)
        mnist = tf.keras.datasets.fashion_mnist
	(training_images, training_labels), (test_images, test_labels) = mnist.load_data()
	import matplotlib.pyplot as plt
	plt.imshow(training_images[0])
	print(training_labels[0])
	print(training_images[0])
        training_images  = training_images / 255.0
	test_images = test_images / 255.0
 	model = tf.keras.models.Sequential([tf.keras.layers.Flatten(), tf.keras.layers.Dense(128, activation=tf.nn.relu), tf.keras.layers.Dense(10, activation=tf.nn.softmax)])
  	model.compile(optimizer = tf.keras.optimizers.Adam(), loss = 'sparse_categorical_crossentropy', metrics=['accuracy'])
   	model.fit(training_images, training_labels, epochs=5)
    	model.evaluate(test_images, test_labels)
     	classifications = model.predict(test_images)
      	print(classifications[0])
	print(test_labels[0]) > /tmp/cv-result.txt        
        EOF
      - sudo chmod +x /home/ubuntu/install-script.sh
      - sudo sh /home/ubuntu/install-script.sh
      - sudo chmod +x /home/ubuntu/tensor.py
      - sudo python3 /home/ubuntu/tensor.py
      
